# /api/v3/storages/{id}/files
---
get:
  summary: Gets files of a storage.
  operationId: get_storage_files
  tags:
    - File links
  description: |-
    Gets a collection of file meta data from a storage. 
    
    If no `storageItem` context was given, it defaults to the ID of the storage's root directory.
    
    With the `storageItem` context provided and the storageItem being the ID of a directory, the result consists of a collections of meta data for all
    `storageItem`s within that directory.
    
    TODO: I believe that this is bad design. We would need to first check the collection's sizes to be 1 and then
          compare the requested storageItem ID with the one element in the collection. 
    If the provided `storageItem` context is not a directory, but a file, the collection contains this file's meta data 
    as a single element.

  parameters:
    - name: id
      description: Storage ID
      in: path
      required: true
      schema:
        type: integer
      example: 1337
    - name: storageItem
      description: ID of the file or directory for which 
      in: query
      required: false
      schema:
        type: string
      example: 53
  responses:
    '200':
      description: OK
      content:
        application/hal+json:
          schema:
            $ref: '../components/schemas/storage_item_collection_model.yml'
    '404':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
            message: The requested resource could not be found.
      description: |-
        Returned in either of those cases:
        - if the storage does not exist or the client does not have sufficient permissions to see it.

          **Required permission:** view file links
        - if the storageItem ID does not exist on the storage. 
